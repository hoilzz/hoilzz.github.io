{"data":{"site":{"siteMetadata":{"title":"hoilzz","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"번역 및 정리 필요 https://stackoverflow.com/questions/46736983/will-a-stateless-component-re-render-if-its-props-have-not-changed/46737063 https…","fields":{"slug":"/devlog/react-render/"},"frontmatter":{"date":"March 11, 2019","title":"stateless component, purecomponent 리렌더링 이유 비교","category":"devlog"}}},{"node":{"excerpt":"코드를 보려면  이동 velopert님이 굉장히 잘  정리 해주셔서 링크 참고 부탁드립니다. 위 방식대로 하면 dynamic import에서 eslint가 다음과 같은 에러를 발생시킵니다. Eslint README의 What about…","fields":{"slug":"/webpack/11-eslint-prettier/"},"frontmatter":{"date":"February 12, 2019","title":"[나만의 웹팩 만들기] 11. eslint, prettier로 편안해지기","category":"webpack"}}},{"node":{"excerpt":"코드를 보려면  이동 바벨 설정 jsx syntax, react 관련 syntax를 transform 할 preset을 추가하자. babel-loader의 include 설정이 잘못되어서 transpile…","fields":{"slug":"/webpack/10-react/"},"frontmatter":{"date":"February 11, 2019","title":"[나만의 웹팩 만들기] 10. react 환경 구축하기","category":"webpack"}}},{"node":{"excerpt":"코드를 보려면  이동 Resolve에 대한 기초는  여기서  확인하자. 여태 세팅하지 않고도 resolve를 잘해줬는데, 이유는 webpack이 합리적인 defaults 옵션을 제공하기 때문이다. 여튼 Resolve 옵션은 module이 resolve…","fields":{"slug":"/webpack/9-resolve/"},"frontmatter":{"date":"February 10, 2019","title":"[나만의 웹팩 만들기] 9. resolve","category":"webpack"}}},{"node":{"excerpt":"코드를 보려면  이동 build/compilation 퍼포먼스의 개선을 위한 유용한 팁 모음집. General 일단 prod와 dev를 나눠서 세팅하는 것을 전제로한다.\ndev와 prod의 목표는 다르기 때문이다. strong source map…","fields":{"slug":"/webpack/8-performance/"},"frontmatter":{"date":"February 09, 2019","title":"[나만의 웹팩 만들기] 8. performance","category":"webpack"}}},{"node":{"excerpt":"코드를 보려면  이동 브라우저가 static 자원을 요청할 때, 불필요한 traffic…","fields":{"slug":"/webpack/7-caching/"},"frontmatter":{"date":"February 08, 2019","title":"[나만의 웹팩 만들기] 7. caching","category":"webpack"}}},{"node":{"excerpt":"코드를 보려면  이동 코드 스플릿은 Webpack의 가장 강력한 기능 중 하나다. 코드를 다양한 번들로 나눈다 이 번들은 필요할 때 로드되거나 병렬로 로드될 수 있다 작은 번들을 만들 때 사용된다 리소스 부하 우선순위 제어할 수 있다 Code…","fields":{"slug":"/webpack/6-code-split/"},"frontmatter":{"date":"February 07, 2019","title":"[나만의 웹팩 만들기] 6. code split","category":"webpack"}}},{"node":{"excerpt":"코드를 보려면  이동 와  의 빌드 목표는 아예 다르다. strong source map  localhost server with live reloading or Hot module replacement minified bundles lighter…","fields":{"slug":"/webpack/5-production/"},"frontmatter":{"date":"February 06, 2019","title":"[나만의 웹팩 만들기] 5. production","category":"webpack"}}},{"node":{"excerpt":"코드를 보려면  이동 이번 포스팅 내용은 production mode에서는 필요없는 설정이다. development mode에서만 필요하다. 일단 mode를 development로 설정하자. mode \n각 모드에 따라 최적화가 달라진다.\ndev…","fields":{"slug":"/webpack/4-development-environment/"},"frontmatter":{"date":"February 05, 2019","title":"[나만의 웹팩 만들기] 4. 개발 환경 구축하기","category":"webpack"}}},{"node":{"excerpt":"코드를 보려면  이동 만약에 서비스하는 앱이라면, 번들 파일의 사이즈가 점점 커질 수 있다. 그래서  file 이름에 hash를 이용하여  static resource…","fields":{"slug":"/webpack/3-output/"},"frontmatter":{"date":"February 04, 2019","title":"[나만의 웹팩 만들기] 3. output","category":"webpack"}}},{"node":{"excerpt":"코드를 보려면  이동 babel은 JS Compiler다. 바벨은 ES6+ code를 ES5로 변경해준다. 그래서 하위 브라우저(IE..그리고 IE..)에 대응할 수 있다. 바벨  getting started 에서 제안하는 package…","fields":{"slug":"/webpack/2-add-babel/"},"frontmatter":{"date":"February 03, 2019","title":"[나만의 웹팩 만들기] 2. babel 추가하기","category":"webpack"}}},{"node":{"excerpt":"코드를 보려면  이동 웹팩에 대해 간단히 알아보기 위해  concepts 를 요약한 내용은 다음과 같다. webpack…","fields":{"slug":"/webpack/1-basic-build/"},"frontmatter":{"date":"February 02, 2019","title":"[나만의 웹팩 만들기] 1. basic build","category":"webpack"}}},{"node":{"excerpt":"회사에 fe 환경 구축 cli가 있어서 편하게 사용하고 있었다. 이 cli는 웹팩 v3 환경으로 세팅해주었다. 해당 cli…","fields":{"slug":"/webpack/0-webpack/"},"frontmatter":{"date":"February 01, 2019","title":"[나만의 웹팩 만들기] 0. webpack 개념","category":"webpack"}}},{"node":{"excerpt":"…","fields":{"slug":"/react/normalizing-state-shape/"},"frontmatter":{"date":"September 20, 2018","title":"[번역] Normalizing State Shape","category":"react"}}},{"node":{"excerpt":"dan의 building-react-applications-with-idiomatic-redux 을 보며 새롭게 배운것들만 따로 정리. 전체 코드 및 해석된 대본 정리는  advanced Redux  에서 참고 가능. 1. Colocating…","fields":{"slug":"/react/build-react-app-with-idiomatic-redux/"},"frontmatter":{"date":"September 01, 2018","title":"dan의 build-react-app-with-idiomatic-redux 강의 정리","category":"react"}}},{"node":{"excerpt":"5. 오리타입으로 비용 줄이기 OOD…","fields":{"slug":"/book/ch5-오리타입으로-비용줄이기/"},"frontmatter":{"date":"January 06, 2018","title":"[루비로 배우는 객체지향 디자인] 5. 오리타입으로 비용 줄이기","category":"book"}}},{"node":{"excerpt":"4.3, 4 자신의 인터페이스를 드러내는 코드 작성하기 4.3.…","fields":{"slug":"/book/ch4-3-유연한-인터페이스-만들기/"},"frontmatter":{"date":"December 22, 2017","title":"[루비로 배우는 객체지향 디자인] 4. 유연한 인터페이스 만들기(3)","category":"book"}}},{"node":{"excerpt":"4.3.…","fields":{"slug":"/book/ch4-2-유연한-인터페이스-만들기/"},"frontmatter":{"date":"December 12, 2017","title":"[루비로 배우는 객체지향 디자인] 4. 유연한 인터페이스 만들기(2)","category":"book"}}},{"node":{"excerpt":"…","fields":{"slug":"/book/ch4-1-유연한-인터페이스-만들기/"},"frontmatter":{"date":"December 02, 2017","title":"[루비로 배우는 객체지향 디자인] 4. 유연한 인터페이스 만들기","category":"book"}}},{"node":{"excerpt":"객체간 서로 협업하려면 서로에 대해 지식이 있어야함.  이 지식은 의존성을 만듬 3.1 의존성 이해하기 3.1.1 의존성 있다는 거 알기 객체는 다음과 같은 내용을 알고 있을 때 의존성을 가짐 다른 클래스의 이름 Gear 는 Wheel…","fields":{"slug":"/book/ch3-의존성-관리하기/"},"frontmatter":{"date":"November 21, 2017","title":"[루비로 배우는 객체지향 디자인] 3. 의존성 관리하기","category":"book"}}},{"node":{"excerpt":"…","fields":{"slug":"/book/ch2-단일-책임-원칙을-따르는-클래스-디자인/"},"frontmatter":{"date":"November 05, 2017","title":"[루비로 배우는 객체지향 디자인] 2. 단일 책임 원칙","category":"book"}}},{"node":{"excerpt":"Javascript는 싱글 스레드로 동작한다. node.js는 이벤트 루프 기반 싱글 스레드다 등등 이런 말을 많이 들었다. 싱글 스레드는 동시에 하나의 작업만 처리 가능하다.\n하지만 js…","fields":{"slug":"/javascript/concurrency-model-and-event-loop/"},"frontmatter":{"date":"August 01, 2017","title":"concurrency model and event loop","category":"javascript"}}},{"node":{"excerpt":"Javascript 기초 이론 공부 후, 잘 배웠나 테스트 하기 위해 TodoList(based on MVC with vanilla JS)를 만들어보았다. 전체 구조 를 통해 todolist MVC…","fields":{"slug":"/javascript/todolist-with-mvc/"},"frontmatter":{"date":"June 22, 2017","title":"mvc를 이용하여 todolist 만들어보기","category":"javascript"}}},{"node":{"excerpt":"급하면 2번 부터 보자. 1. Event dispatch and DOM event flow 과  에 대해 알아보자. Application은  를 통해 이벤트 objects를 전파한다. 그리고 event object는 DOM event flow…","fields":{"slug":"/javascript/event-bubbling/"},"frontmatter":{"date":"May 21, 2017","title":"Event Bubbling","category":"javascript"}}}]}},"pageContext":{}}