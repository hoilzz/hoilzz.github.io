{"data":{"site":{"siteMetadata":{"title":"hoilzz","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"Welcome, Gatsby! This starter is full-package for your new blog! 1. Support Three frontmatter title date category 2. Code highlighting With…","fields":{"slug":"/development/hello/"},"frontmatter":{"date":"February 06, 2019","title":"Welcome Bee starter","category":"development"}}},{"node":{"excerpt":"Second Post","fields":{"slug":"/development/second/"},"frontmatter":{"date":"February 03, 2019","title":"Second Post","category":"development"}}},{"node":{"excerpt":"Third Post","fields":{"slug":"/development/third/"},"frontmatter":{"date":"February 01, 2019","title":"Third Post","category":"development"}}},{"node":{"excerpt":"eslint, prettier 이건 꼭 쓰세요. velopert님이 너무너무 잘  정리 해주셔서 꼭 쓰세요. 두 번 쓰세요. 대신 위에 없는 내용만 다뤄보겠습니다. 위 방식대로 하면 dynamic import에서 eslint…","fields":{"slug":"/webpack/11-eslint-prettier/"},"frontmatter":{"date":"February 12, 2019","title":"11. 나만의 webpack 만들기 - eslint, prettier로 편안해지기","category":"webpack"}}},{"node":{"excerpt":"react 바벨 설정 jsx syntax, react 관련 syntax를 transform 할 preset을 추가하자. babel-loader의 include 설정이 잘못되어서 transpile…","fields":{"slug":"/webpack/10-react/"},"frontmatter":{"date":"February 11, 2019","title":"10. 나만의 webpack 만들기 - react 환경 구축하기","category":"webpack"}}},{"node":{"excerpt":"9. Resolve Resolve에 대한 기초는  여기서  확인하자. 여태 세팅하지 않고도 resolve를 잘해줬는데, 이유는 webpack이 합리적인 defaults 옵션을 제공하기 때문이다.  여튼 Resolve 옵션은 module이 resolve…","fields":{"slug":"/webpack/9-resolve/"},"frontmatter":{"date":"February 10, 2019","title":"9. 나만의 webpack 만들기 - resolve","category":"webpack"}}},{"node":{"excerpt":"8. build performance build/compilation 퍼포먼스의 개선을 위한 유용한 팁 모음집. General 일단 prod와 dev를 나눠서 세팅하는 것을 전제로한다.\ndev와 prod의 목표는 다르기 때문이다. strong…","fields":{"slug":"/webpack/8-performance/"},"frontmatter":{"date":"February 09, 2019","title":"8. 나만의 webpack 만들기 - performance","category":"webpack"}}},{"node":{"excerpt":"5. Caching 브라우저가 static 자원을 요청할 때, 불필요한 traffic…","fields":{"slug":"/webpack/7-caching/"},"frontmatter":{"date":"February 08, 2019","title":"7. 나만의 webpack 만들기 - caching","category":"webpack"}}},{"node":{"excerpt":"Code Split 코드 스플릿은 Webpack의 가장 강력한 기능 중 하나다. 코드를 다양한 번들로 나눈다 이 번들은 필요할 때 로드되거나 병렬로 로드될 수 있다  작은 번들을 만들 때 사용된다 리소스 부하 우선순위 제어할 수 있다 Code…","fields":{"slug":"/webpack/6-code-split/"},"frontmatter":{"date":"February 07, 2019","title":"6. 나만의 webpack 만들기 - code split","category":"webpack"}}},{"node":{"excerpt":"Production 와  의 빌드 목표는 아예 다르다. strong source map localhost server with live reloading or Hot module replacement minified bundles lighter…","fields":{"slug":"/webpack/5-production/"},"frontmatter":{"date":"February 06, 2019","title":"5. 나만의 webpack 만들기 - production","category":"webpack"}}},{"node":{"excerpt":"4. 개발 환경 갖추기 얘는 production mode에서는 필요없는 설정이다. development mode에서만 필요하다. 일단 mode를 development로 설정하자. mode \n각 모드에 따라 최적화가 달라진다.\ndev…","fields":{"slug":"/webpack/4-development-environment/"},"frontmatter":{"date":"February 05, 2019","title":"4. 나만의 webpack 만들기 - 개발 환경 구축하기","category":"webpack"}}},{"node":{"excerpt":"코드를 보려면  이동 만약에 서비스하는 앱이라면, 점점 커질 수 있다.  file 이름에 hash를 이용하여  static resource에 대해 캐싱할 수 있다. 일단, output 이름부터 지정해주자. (사실 안해줘도 되는데 나중에 entry…","fields":{"slug":"/webpack/3-output/"},"frontmatter":{"date":"February 04, 2019","title":"3. 나만의 webpack 만들기 - output","category":"webpack"}}},{"node":{"excerpt":"코드를 보려면  이동 babel은 JS Compiler다. 바벨은 ES6+ code를 ES5로 변경해준다. 그래서 하위 브라우저(IE..)에 대응할 수 있다. 바벨  getting started  제안하는 package를 먼저 설치하자. core…","fields":{"slug":"/webpack/2-add-babel/"},"frontmatter":{"date":"February 03, 2019","title":"2. 나만의 webpack 만들기 - babel 추가하기","category":"webpack"}}},{"node":{"excerpt":"코드를 보려면  이동 웹팩에 대해 간단히 알아보기 위해  concepts 를 요약 번역해보겠습니다. webpack…","fields":{"slug":"/webpack/1-basic-build/"},"frontmatter":{"date":"February 02, 2019","title":"1. 나만의 webpack 만들기 - basic build","category":"webpack"}}},{"node":{"excerpt":"회사에 fe 환경 구축 cli가 있어서 편하고 사용하고 있었다. 이 cli는 웹팩 v3 환경으로 세팅해주었다. 해당 cli…","fields":{"slug":"/webpack/0-webpack/"},"frontmatter":{"date":"February 01, 2019","title":"0. 나만의 webpack 만들기 - webpack 개념","category":"webpack"}}},{"node":{"excerpt":"Javascript는 싱글 스레드로 동작한다. node.js는 이벤트 루프 기반 싱글 스레드다 등등 이런 말을 많이 들었다. 싱글 스레드는 동시에 하나의 작업만 처리 가능하다.\n하지만 js…","fields":{"slug":"/javascript/concurrency-model-and-event-loop/"},"frontmatter":{"date":"August 01, 2017","title":"concurrency model and event loop","category":"javascript"}}},{"node":{"excerpt":"Javascript 기초 이론 공부 후, 잘 배웠나 테스트 하기 위해 TodoList(based on MVC with vanilla JS)를 만들어보았다. 전체 구조 를 통해 todolist MVC…","fields":{"slug":"/javascript/todolist-with-mvc/"},"frontmatter":{"date":"June 22, 2017","title":"mvc를 이용하여 todolist 만들어보기","category":"javascript"}}},{"node":{"excerpt":"급하면 2번 부터 보자. 1. Event dispatch and DOM event flow 과  에 대해 알아보자. Application은  를 통해 이벤트 objects를 전파한다. 그리고 event object는 DOM event flow…","fields":{"slug":"/javascript/event-bubbling/"},"frontmatter":{"date":"May 21, 2017","title":"Event Bubbling","category":"javascript"}}}]}},"pageContext":{}}