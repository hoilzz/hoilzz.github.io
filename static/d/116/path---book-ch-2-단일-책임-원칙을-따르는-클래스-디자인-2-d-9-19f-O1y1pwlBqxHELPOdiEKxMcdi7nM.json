{"data":{"site":{"siteMetadata":{"title":"hoilzz","author":"hoilzz","siteUrl":"https://hoilzz.github.io","comment":{"disqusShortName":"","utterances":"hoilzz/hoilzz-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"02972438-b4be-5706-984d-579d23b4bc76","excerpt":"디자인의 핵심인 메시지, 하지만 가장 명시적으로 드러나는 것은 클래스.\n이번에 집중할 것 무엇이 클래스에 속하는지 어떻게 알 수 있는지 어떤 클래스를 만들어야 할까? 몇 개나 만들까? 어떤 행동을 구현해야 할까? 하나의 클래스는 다른 클래스에 대해 얼마나 알고 있어야 할까? 다른 클래스에게는 어느 정도까지 열려있어야 할까? 클래스는 단순해야 한다  에 집중. 클래스는 지금 당장 해야 할 일을 할 줄알고 나중에도 쉽게 수정할 수 있는 클래스를 모델링 하자 2.…","html":"<p>디자인의 핵심인 메시지, 하지만 가장 명시적으로 드러나는 것은 클래스.\n이번에 집중할 것</p>\n<ul>\n<li><strong>무엇이 클래스에 속하는지</strong></li>\n<li>\n<p><strong>어떻게 알 수 있는지</strong></p>\n<ul>\n<li>어떤 클래스를 만들어야 할까?</li>\n<li>몇 개나 만들까?</li>\n<li>어떤 행동을 구현해야 할까?</li>\n<li><strong>하나의 클래스는 다른 클래스에 대해 얼마나 알고 있어야 할까?</strong></li>\n<li><strong>다른 클래스에게는 어느 정도까지 열려있어야 할까?</strong></li>\n</ul>\n</li>\n</ul>\n<p><strong>클래스는 단순해야 한다</strong> 에 집중. 클래스는</p>\n<ul>\n<li>지금 당장 해야 할 일을 할 줄알고</li>\n<li>나중에도 쉽게 수정할 수 있는</li>\n</ul>\n<p>클래스를 모델링 하자</p>\n<h2 id=\"21-무엇을-클래스에-넣을지-결정하기\"><a href=\"#21-%EB%AC%B4%EC%97%87%EC%9D%84-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%97%90-%EB%84%A3%EC%9D%84%EC%A7%80-%EA%B2%B0%EC%A0%95%ED%95%98%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1 무엇을 클래스에 넣을지 결정하기</h2>\n<p>우리는 코드 짤 줄 아는데, 코드를 <strong>어떻게 구성하고</strong>, <strong>어디에 배치할지</strong> 모름</p>\n<h3 id=\"211-메서드들을-묶어-클래스로-만들기\"><a href=\"#211-%EB%A9%94%EC%84%9C%EB%93%9C%EB%93%A4%EC%9D%84-%EB%AC%B6%EC%96%B4-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A1%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1.1 메서드들을 묶어 클래스로 만들기</h3>\n<p>클래스는 <code class=\"language-text\">우리가 애플리케이션에 대해 어떻게 생각하는지</code>에 대해 영원히 영향을 미침</p>\n<ul>\n<li>다른 개발자가 이 애플리케이션이 무엇인지 상상할 수 있는 범위를 규정</li>\n<li>\n<p><strong>변화를 잘 수용할 수 있어야함</strong></p>\n<ul>\n<li>스펙은 계속 바뀌니까</li>\n</ul>\n</li>\n</ul>\n<p>그래서 디자인이란, 완벽함을 추구하는 것보단 <strong>코드의 수정가능성을 보정하는 기술</strong></p>\n<h3 id=\"212-수정하기-쉽도록-코드-구성하기\"><a href=\"#212-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0-%EC%89%BD%EB%8F%84%EB%A1%9D-%EC%BD%94%EB%93%9C-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1.2 수정하기 쉽도록 코드 구성하기</h3>\n<p>먼저 <strong>수정하기 쉽다</strong> 를 정의하기</p>\n<ul>\n<li>수정이 예상치 못한 부작용을 낳지 않음</li>\n<li>요구사항이 조금 변했을 때 연관 코드를 조금만 수정하면 됨</li>\n<li>현재 코드 재사용하기 쉬움</li>\n<li>코드 수정하기 가장 쉬운 방법은 이미 수정하기 쉬운 코드에 새로운 코드 추가</li>\n</ul>\n<p>작성하는 코드는 다음 특징을 가짐</p>\n<ul>\n<li>\n<p>투명하다</p>\n<ul>\n<li>수정된 코드 속에서, 이 코드와 연관된 코드 속에서 <strong>수정의 결과가 뚜렷하게 드러나야함</strong></li>\n</ul>\n</li>\n<li>\n<p>적절하다</p>\n<ul>\n<li>모든 수정 비용은 수정 결과를 통해 얻은 이득에 비례</li>\n</ul>\n</li>\n<li>\n<p>사용 가능하다</p>\n<ul>\n<li>예상치 못한 상황에서 현재 코드 사용 가능</li>\n</ul>\n</li>\n<li>\n<p>모범이 된다</p>\n<ul>\n<li>나중에 수정하는 사람이 위 특징을 이어갈 수 있음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"22-하나의-책임만을-지는-클래스-만들기\"><a href=\"#22-%ED%95%98%EB%82%98%EC%9D%98-%EC%B1%85%EC%9E%84%EB%A7%8C%EC%9D%84-%EC%A7%80%EB%8A%94-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2 하나의 책임만을 지는 클래스 만들기</h2>\n<p>요번 챕터의 예시 주제로 자전거, 그리고 기어비를 계산 하는 애플리케이션 만드는거</p>\n<p>일단 클래스가 될만한거는 <code class=\"language-text\">자전거</code>(근데 지금 필요한거 아님)\n반면 기어는 앞 톱니바퀴, 뒷 톱니바퀴, 기어비를 가짐.</p>\n<ul>\n<li>데이터(앞 톱니바퀴 외 2 개),</li>\n<li>행동(기어비 구하기)</li>\n</ul>\n<p>둘 다 가지기 때문에 클래스 만들 수 있음</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Gear</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>readonly cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> readonly chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token function\">ratio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chainRing <span class=\"token operator\">/</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cog<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> myGear <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gear</span><span class=\"token punctuation\">(</span><span class=\"token number\">52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ratio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> friendGear <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gear</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ratio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>기어계산기 만듬.</p>\n<p>요구사항이 늘어남</p>\n<ul>\n<li>\n<p>다양한 크기의 바퀴를 고려할 수 있는 계산기</p>\n<ul>\n<li>기어와 연결된 뒷바퀴가 큰바퀴일 경우, 한 바퀴 돌 때 멀리감</li>\n<li>작은바퀴일 경우 한 바퀴 돌려도 얼마 못감</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>위와 관련된 스펙이 미국에서 기어인치(=바퀴 지름 x 기어비)라고 함\n이 때, 바퀴 지름은 = 바퀴테(rim) 지름 + 타이어 높이의 두 배</p>\n</blockquote>\n<p>Gear 에 새로운 행동 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Gear</span> <span class=\"token punctuation\">{</span>\n  readonly cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly rim<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly tire<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> rim<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> tire<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cog <span class=\"token operator\">=</span> cog<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chainRing <span class=\"token operator\">=</span> chainRing<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rim <span class=\"token operator\">=</span> rim<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tire <span class=\"token operator\">=</span> tire<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">ratio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chainRing <span class=\"token operator\">/</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cog<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 새로 추가된 함수</span>\n  <span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 타이어는 바퀴테를 가싸고 있어서, 지름 계산시 타이어 높이에 2를 곱함</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ratio <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rim <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tire <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> myGearInches <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gear</span><span class=\"token punctuation\">(</span><span class=\"token number\">52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> friendGearInches <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gear</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>현재 모습이 코드 최선으로 배치하는 방법일까?\n정답은 <strong>상황에 따라 다르다</strong> 이다.</p>\n<h3 id=\"222-단일-책임-원칙은-왜-중요한가\"><a href=\"#222-%EB%8B%A8%EC%9D%BC-%EC%B1%85%EC%9E%84-%EC%9B%90%EC%B9%99%EC%9D%80-%EC%99%9C-%EC%A4%91%EC%9A%94%ED%95%9C%EA%B0%80\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.2 단일 책임 원칙은 왜 중요한가?</h3>\n<p>쉽게 수정할 수 있는 애플리케이션은 재사용하기 쉬운 클래스로 구성</p>\n<p>재사용하기 쉬운 클래스란 쉽게 가져다 쓸 수 있는 코드(pluggable units)</p>\n<ul>\n<li>잘 정의되어 있는 행동의 묶음</li>\n<li>레고블록 같은거</li>\n</ul>\n<p>한 개 이상의 책임이 있는 클래스는 재사용이 어려움</p>\n<ul>\n<li>여러 책임들이 서로 얽힐 가능성 높음</li>\n<li>특정 행동만 재사용하고 싶어도 우리가 원하는 부분만 가져오기 어려움</li>\n<li>\n<p>이 상황에서 할 수 있는 거</p>\n<ul>\n<li>코드 복붙하기</li>\n<li>리얼 끔찍. 유지보수 어렵게 만들고 버그 양산</li>\n</ul>\n</li>\n</ul>\n<p>재사용하려는 클래스는 스스로의 역할에 대해 혼란스럽고 책임들이 뒤얽힘</p>\n<ul>\n<li>수저애향함</li>\n<li>클래스가 바뀔 때마다 이 클래스를 사용하는 모든 클래스에서 문제 발생 가능성 높음</li>\n</ul>\n<h3 id=\"223-클래스에게-하나의-책임만-있는지-알아보기\"><a href=\"#223-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%97%90%EA%B2%8C-%ED%95%98%EB%82%98%EC%9D%98-%EC%B1%85%EC%9E%84%EB%A7%8C-%EC%9E%88%EB%8A%94%EC%A7%80-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.3 클래스에게 하나의 책임만 있는지 알아보기</h3>\n<ol>\n<li>\n<p>클래스가 인격이 있는 것처럼 질문하기. 예컨대,</p>\n</li>\n<li>\n<p>ex. Gear 님, 당신의 기어비는 무엇인가여?</p>\n</li>\n<li>\n<p>클래스의 책임을 한 문장으로 만들어보기</p>\n</li>\n<li>\n<p>최대한 작으면서 유용한 것만 행해야 하는 것(smallest possible useful thing)</p>\n</li>\n<li>\n<p>가장 단순한 표현이 <code class=\"language-text\">그리고</code>, <code class=\"language-text\">또는</code> 이라는 단어 사용시 연관된지 않은 둘 이상의 책임을 가지고 있다고 판단</p>\n</li>\n</ol>\n<p><strong>응집력</strong>\n클래스 안의 모든 것들이 1 개의 핵심 목표와 연관되어있을 때 이 클래스는 강하게 응집되어 있음.\n또는 1 개의 책임을 가진다고 말할 수 있음</p>\n<blockquote>\n<p>Gear 클래스의 책임을 표현하자면\n“앞, 뒤 톱니바퀴 사이의 기어비를 계산한다”: Gear 클래스는 많은 거 하고 있음\n“자전거에 기어가 미치는 영향을 계산한다”: 더 어울림\n그렇다면 gear_inches 는 Gear 에 속하는 것이 맞음. 하지만 <strong>타이어 높이는 애매</strong></p>\n</blockquote>\n<h3 id=\"224-언제-디자인-결정할지-판단하기\"><a href=\"#224-%EC%96%B8%EC%A0%9C-%EB%94%94%EC%9E%90%EC%9D%B8-%EA%B2%B0%EC%A0%95%ED%95%A0%EC%A7%80-%ED%8C%90%EB%8B%A8%ED%95%98%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2.4 언제 디자인 결정할지 판단하기</h3>\n<p>Gear 처럼 불안한 클래스를 본다면,\n“지금 암것도 안하면 나중에 어떤 대가 치를까?” 라고 질문하기</p>\n<p>현재 Gear 는 다른 객체와의 의존성이 생길 경우 <code class=\"language-text\">투명함</code>과 <code class=\"language-text\">적절함</code>을 잃게 됨\n바로 이 순간이 코드 재구성해야할 때</p>\n<h2 id=\"23-변화를-받아들일-수-있는-코드-작성하기\"><a href=\"#23-%EB%B3%80%ED%99%94%EB%A5%BC-%EB%B0%9B%EC%95%84%EB%93%A4%EC%9D%BC-%EC%88%98-%EC%9E%88%EB%8A%94-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3 변화를 받아들일 수 있는 코드 작성하기</h2>\n<h3 id=\"231-데이터가-아닌-행동에-기반한-코드-작성\"><a href=\"#231-%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-%EC%95%84%EB%8B%8C-%ED%96%89%EB%8F%99%EC%97%90-%EA%B8%B0%EB%B0%98%ED%95%9C-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3.1 데이터가 아닌 행동에 기반한 코드 작성</h3>\n<p>객체는 행동과 함께 데이터를 가짐</p>\n<ul>\n<li>\n<p>데이터는</p>\n<ul>\n<li>인스턴스 변수를 참조하거나</li>\n<li>인스턴스 변수를 감싸는 <code class=\"language-text\">accessor method</code>를 통해 접근</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"인스턴스-변수-숨기기\"><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EB%B3%80%EC%88%98-%EC%88%A8%EA%B8%B0%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인스턴스 변수 숨기기</h4>\n<p>변수 직접 참조하기 보다 언제나 accessor 를 통해 접근하기</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Gear</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>readonly cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> readonly chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token function\">getCog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cog<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">ratio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// return this.chainRing / this.cog; // 멸망의 길</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chainRing <span class=\"token operator\">/</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">여러 곳에서 참조하고 있는 데이터</code> 에서 <code class=\"language-text\">단 한 번만 정의된 행동</code>으로 변경</p>\n<ul>\n<li>\n<p>직접 참조하기 단점</p>\n<ul>\n<li>만약 <code class=\"language-text\">cog</code>를 열 군데에서 참조시 내용 바꿔야 한다면 10 군데 전부 일일히 수정해야함</li>\n</ul>\n</li>\n<li>\n<p>accessor 의 장점</p>\n<ul>\n<li>cog 수정시 getter 메서드만 수정하면 됨.</li>\n</ul>\n</li>\n</ul>\n<p>데이터를 마치 <code class=\"language-text\">메시지를 이해하는 객체</code> 처럼 취급하는 것은 두 가지 새로운 이슈를 발생</p>\n<ol>\n<li>\n<p>가시성</p>\n</li>\n<li>\n<p>public vs private (4 장 유연한 인터페이스 만들기에서 다시 다룸)</p>\n</li>\n<li>\n<p>추상적</p>\n</li>\n<li>\n<p>모든 변수를 래퍼 메서드로 감싸고 변수를 객체처럼 사용할 수 있음</p>\n</li>\n<li>\n<p>이 때문에, 데이터와 객체 사이의 구분이 무의미</p>\n</li>\n<li>\n<p>가끔 애플리케이션의 특정 부분을 행동과 무관한 데이터라 생각하는게 편리하지만</p>\n</li>\n<li>\n<p>대부분의 경우 데이터를 일반적인 객체로 이해하는게 맘편함</p>\n</li>\n</ol>\n<h4 id=\"데이터-구조-숨기기\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%AC%EC%A1%B0-%EC%88%A8%EA%B8%B0%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 구조 숨기기</h4>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ObscuringReference</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>readonly data<span class=\"token punctuation\">:</span> array<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>data 는 복잡한 구조여서 단순히 인스턴스 변수 감추는 것으로 불충분</p>\n<ul>\n<li><strong>data 메서드를 전송하는 객체는 배열의 어느 위치에 어떤 데이터가 들어있는지 알아야함</strong></li>\n</ul>\n<p>diameter</p>\n<ul>\n<li>\n<p>메서드는 지름을 계산하는 방법만 아는게 아니라</p>\n</li>\n<li>\n<p>배열의 어디에서 바쿠테 지름과 타이어 높이를 찾아야하는지도 알고 있다.</p>\n<ul>\n<li><code class=\"language-text\">[0]</code>: 바퀴테 지름, <code class=\"language-text\">[1]</code>: 타이어 지름</li>\n<li><strong>이런 지식은 배열의 구조에 의존적</strong></li>\n<li>전혀 DRY 하지 않음</li>\n<li>이런 지식은 <strong>단 한 곳에서 관리되어야 함</strong></li>\n</ul>\n</li>\n<li>\n<p>왜냐면 복잡한 구조를 직접 참조시 진짜 데이터가 무엇인지 드러나지 않음</p>\n</li>\n<li>\n<p>또한, 배열의 구조 변경시 그 영향이 코드 전체로 퍼짐</p>\n</li>\n<li>\n<p><strong>복잡한 구조를 직접 참조하면 진짜 데이터가 무엇인지 드러내지 않기 떄문에 헷갈림</strong></p>\n</li>\n<li>\n<p>배열 구조 바뀔 때마다 모든 참조지점 찾아서 수정해야 하기 때문에 지옥의 유지보수 경험</p>\n</li>\n</ul>\n<p>해결해보자</p>\n<ul>\n<li>\n<p>diameter 는 배열의 내부 구조에 대한 지식이 0</p>\n<ul>\n<li>diameter 는 wheels 메시지가 enumerable 을 반환하는 것만 알고 있음</li>\n</ul>\n</li>\n<li>\n<p>입력받은 배열의 구조에 대한 모든 지식은 wheelify 메서드 속에 격리됨</p>\n<ul>\n<li>만약 입력 값 변하면 여기만 바꾸면 됨</li>\n</ul>\n</li>\n</ul>\n<p>정리하자면, <code class=\"language-text\">데이터 구조를 들여다 보단 작업</code>을 <code class=\"language-text\">객체에 대한 메시지를 전송</code>으로 대체</p>\n<ul>\n<li>wheelify 메서드는 구조에 대한 지저분한 정보를 한쪽에 몰아 놓고 코드를 DRY 하게 만듬</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">WheelInterface</span> <span class=\"token punctuation\">{</span>\n  rim<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  tire<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Wheel</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">WheelInterface</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> rim<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> tire<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>rim<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> tire<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rim <span class=\"token operator\">=</span> rim<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tire <span class=\"token operator\">=</span> tire<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">RevealingReferences</span> <span class=\"token punctuation\">{</span>\n  readonly wheel<span class=\"token punctuation\">:</span> Wheel<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wheel <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">wheelify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">wheelify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>rim<span class=\"token punctuation\">,</span> tire<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Wheel</span><span class=\"token punctuation\">(</span>rim<span class=\"token punctuation\">,</span> tire<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wheel<span class=\"token punctuation\">.</span>rim <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wheel<span class=\"token punctuation\">.</span>tire <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RevealingReferences</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"232-모든-곳에-단일-책임-원칙을-강제하라\"><a href=\"#232-%EB%AA%A8%EB%93%A0-%EA%B3%B3%EC%97%90-%EB%8B%A8%EC%9D%BC-%EC%B1%85%EC%9E%84-%EC%9B%90%EC%B9%99%EC%9D%84-%EA%B0%95%EC%A0%9C%ED%95%98%EB%9D%BC\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.3.2 모든 곳에 단일 책임 원칙을 강제하라</h3>\n<p>클래스 뿐 아니라 메서드에서도 단일 책임 원칙 강제하자</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> ratio <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>rim <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>tire <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>gear_inches 속에 바퀴의 지름을 구하는 계산이 숨어있음</p>\n<ul>\n<li>이 계산을 diameter 메서드로 추출하면 클래스의 책임을 좀 더 쉽게 파악 가능</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> ratio <span class=\"token operator\">*</span> diameter<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> rim <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>tire <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>메서드가 하나의 책임을 질 때</p>\n<ul>\n<li>클래스가 하는일이 무엇인지 명확해짐</li>\n<li>주석 넣을 필요 없음</li>\n<li>\n<p><strong>메서드 속에 있는 코드 한 조각에 주석을 달아야 한다면 별도의 메서드로 추출</strong></p>\n<ul>\n<li><strong>메서드 이름이 주석과 동일한 역할</strong></li>\n</ul>\n</li>\n<li>재사용 유도</li>\n<li>다른 클래스로 옮기기 쉬움</li>\n</ul>\n<h4 id=\"클래스의-추가적인-책임들을-격리시키자\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%B6%94%EA%B0%80%EC%A0%81%EC%9D%B8-%EC%B1%85%EC%9E%84%EB%93%A4%EC%9D%84-%EA%B2%A9%EB%A6%AC%EC%8B%9C%ED%82%A4%EC%9E%90\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스의 추가적인 책임들을 격리시키자</h4>\n<p><strong>너무 많은 책임을 지고 있는 클래스가 있다면, 이 책임을 다른 클래스 속으로 분리하자.</strong></p>\n<ul>\n<li>핵심 클래스의 집중하자</li>\n<li><strong>아직 제거하기 어려운 추가적인 책임을 발견했다면 그 책임을 격리시키자</strong></li>\n</ul>\n<h2 id=\"24-드디어-진짜-바퀴\"><a href=\"#24-%EB%93%9C%EB%94%94%EC%96%B4-%EC%A7%84%EC%A7%9C-%EB%B0%94%ED%80%B4\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.4 드디어, 진짜 바퀴</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Gear</span> <span class=\"token punctuation\">{</span>\n  readonly cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly wheel<span class=\"token punctuation\">:</span> Wheel<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> wheel<span class=\"token punctuation\">:</span> Wheel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cog <span class=\"token operator\">=</span> cog<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chainRing <span class=\"token operator\">=</span> chainRing<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wheel <span class=\"token operator\">=</span> wheel<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">ratio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chainRing <span class=\"token operator\">/</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cog<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 새로 추가된 함수</span>\n  <span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 타이어는 바퀴테를 가싸고 있어서, 지름 계산시 타이어 높이에 2를 곱함</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ratio <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wheel<span class=\"token punctuation\">.</span><span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Wheel</span> <span class=\"token punctuation\">{</span>\n  rim<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  tire<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>rim<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> tire<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rim <span class=\"token operator\">=</span> rim<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tire <span class=\"token operator\">=</span> tire<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rim <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tire <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Gear 와 Wheel 모두 1 개의 책임안 지게 됨.</p>\n<h2 id=\"요약\"><a href=\"#%EC%9A%94%EC%95%BD\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요약</h2>\n<p>수정하기 쉽고 OOP 소프트웨어 만드는 길은 <strong>1 개의 책임을 지는 클래스</strong> 만드는 것부터 시작</p>\n<ul>\n<li>그 행동을 애플리케이션의 다른 부분들로 분리시키는것</li>\n<li>이 분리가 예상치 못한 결과로부터 자유로운 수정을 할 수 있도록</li>\n<li>중복 없이 코드 재사용할 수 있도록 함</li>\n</ul>\n<p>클래스는 데이터와 행동을 가짐</p>\n<ul>\n<li>\n<p>어떤 행동을 구현할까?</p>\n</li>\n<li>\n<p>1 개의 클래스는 다른 클래스에 대해 얼마나 알고 있을까?</p>\n</li>\n<li>\n<p>다른 클래스에게 어느 정도까지 열려 있을까?</p>\n</li>\n<li>\n<p><code class=\"language-text\">단순해야 한다</code> 라는 것에 집중하여 위 질문에 답하기</p>\n</li>\n<li>\n<p>단일 책임 원칙</p>\n<ul>\n<li>클래스가 인격 있는 것처럼 물어봐서 확인하기 (Gear 님 당신의 기어비는 무엇인가여)</li>\n<li>클래스의 책임을 한문장으로 만들어보기</li>\n</ul>\n</li>\n</ul>\n<p>기법</p>\n<ul>\n<li>\n<p>인스턴스 변수 숨기기</p>\n<ul>\n<li>변수 직접 참조 말고, accessor 를 통해 접근하기</li>\n<li><code class=\"language-text\">여러 곳에서 참조하고 있는 데이터</code> 에서 <code class=\"language-text\">단 한 번만 정의된 행동</code>으로 변경</li>\n<li>데이터 구조 변경시 getter 만 수정하면 이득</li>\n</ul>\n</li>\n<li>\n<p>데이터 구조 숨기기</p>\n<ul>\n<li>데이터 구조 복잡할 경우, 데이터 구조에 대한 지저분한 정보를 한쪽에 격리</li>\n</ul>\n</li>\n<li>단일책임 원칙을 클래스, 메서드에게 강제하기</li>\n<li>\n<p>클래스의 추가 책임을 격리시키기</p>\n<ul>\n<li>너무 많은 책임을 지고 있는 클래스가 있으면, 다른 클래스로 분리</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[루비로 배우는 객체지향 디자인] 2. 단일 책임 원칙","date":"November 05, 2017"}}},"pageContext":{"slug":"/book/ch2-단일-책임-원칙을-따르는-클래스-디자인/","previous":{"fields":{"slug":"/javascript/concurrency-model-and-event-loop/"},"frontmatter":{"title":"concurrency model and event loop","category":"javascript"}},"next":{"fields":{"slug":"/book/ch3-의존성-관리하기/"},"frontmatter":{"title":"[루비로 배우는 객체지향 디자인] 3. 의존성 관리하기","category":"book"}}}}