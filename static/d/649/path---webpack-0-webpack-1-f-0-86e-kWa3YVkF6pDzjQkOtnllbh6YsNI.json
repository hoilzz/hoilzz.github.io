{"data":{"site":{"siteMetadata":{"title":"hoilzz","author":"hoilzz","siteUrl":"","comment":{"disqusShortName":"","utterances":"hoilzz/hoilzz-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"3677e6a5-1b4b-5a6a-955e-ee912bca981d","excerpt":"회사에 fe 환경 구축 cli가 있어서 편하고 사용하고 있었다. 이 cli는 웹팩 v3 환경으로 세팅해주었다. 해당 cli 관련하여 전부 세팅해준 사수님은 이직하고.. 내가 이 업무를 어쩌다 맡게되었다. 하고싶은 업무를 하게 되어서 좋았지만 굉장히 어려웠다. 이 업무에 관련하여 공부하기 위해 나만의 웹팩 환경을 구축할 수 있는 cli…","html":"<p>회사에 fe 환경 구축 cli가 있어서 편하고 사용하고 있었다. 이 cli는 웹팩 v3 환경으로 세팅해주었다. 해당 cli 관련하여 전부 세팅해준 사수님은 이직하고.. 내가 이 업무를 어쩌다 맡게되었다. 하고싶은 업무를 하게 되어서 좋았지만 굉장히 어려웠다. 이 업무에 관련하여 공부하기 위해 나만의 웹팩 환경을 구축할 수 있는 cli를 만들었는데, 이것과 관련된 포스트를 작성하려한다.</p>\n<p>설명이 이해하기 어려우신 분은 한번 <a href=\"https://github.com/hoilzz/create-react-packzz\">사용</a>해보세요(제발)</p>\n<p>일단 웹팩에 대해 간단히 알아보기 위해 <a href=\"https://webpack.js.org/concepts/\">concepts</a>를 요약 번역해보겠습니다.</p>\n<p><strong>webpack</strong> 은 모던 자바스크립트 앱을 위한 <strong>정적 모듈 번들러</strong> 다. 웹팩이 앱을 처리할 때, 내부적으로 프로젝트에 필요한 모든 모듈을 mapping하는 <a href=\"https://webpack.js.org/concepts/dependency-graph/\">의존성 그래프</a>를 만들고 1게 이상의 번들을 생성한다.</p>\n<blockquote>\n<p>Dependency Graph\n한 파일이 다른 파일에 의존할 때마다, webpack은 이것을 <em>dependency</em>로 생각한다. 이렇게 하면, 웹팩은 non-code 자원(image, web fonts와 같은 것)을 가지고 application의 <em>dependency</em> 로 제공할 수 있다.\nentry point(시작점)에서 시작하여, 웹팩은 재귀적으로 앱에 필요한 모든 모듈을 포함하는 의존성 그래프를 빌드한다.\n그리고 나서 모든 모듈을 여러개의 작은 번들(대부분 1개)로 만든다.</p>\n</blockquote>","frontmatter":{"title":"[나만의 웹팩 만들기] 0. webpack 개념","date":"February 01, 2019"}}},"pageContext":{"slug":"/webpack/0-webpack/","previous":{"fields":{"slug":"/react/normalizing-state-shape/"},"frontmatter":{"title":"[번역] Normalizing State Shape","category":"react"}},"next":{"fields":{"slug":"/webpack/1-basic-build/"},"frontmatter":{"title":"[나만의 웹팩 만들기] 1. basic build","category":"webpack"}}}}