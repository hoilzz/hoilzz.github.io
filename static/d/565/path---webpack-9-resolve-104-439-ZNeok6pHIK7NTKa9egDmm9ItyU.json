{"data":{"site":{"siteMetadata":{"title":"hoilzz","author":"hoilzz","siteUrl":"","comment":{"disqusShortName":"","utterances":"hoilzz/hoilzz.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"956d17b9-d720-5f66-a1d2-fe26d2194ee7","excerpt":"9. Resolve Resolve에 대한 기초는  여기서  확인하자. 여태 세팅하지 않고도 resolve를 잘해줬는데, 이유는 webpack이 합리적인 defaults 옵션을 제공하기 때문이다.  여튼 Resolve 옵션은 module이 resolve 되는 방식을 변경시킨다.\n예컨대   호출시,   옵션은 웹팩이  를 찾는 방법을 변경시킬 수 있다. Resolving for build performance 다음 스텝은 resolve…","html":"<h1 id=\"9-resolve\"><a href=\"#9-resolve\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. Resolve</h1>\n<p>Resolve에 대한 기초는 <a href=\"https://github.com/hoilzz/TIL/blob/master/FrontEnd/webpack/%EA%B3%B5%ED%99%88%EB%B2%88%EC%97%AD/module-resolution.md\">여기서</a> 확인하자.</p>\n<p>여태 세팅하지 않고도 resolve를 잘해줬는데, 이유는 webpack이 합리적인 defaults 옵션을 제공하기 때문이다. </p>\n<p>여튼 Resolve 옵션은 module이 resolve 되는 방식을 변경시킨다.\n예컨대 <code class=\"language-text\">import &#39;lodash&#39;</code> 호출시, <code class=\"language-text\">resolve</code> 옵션은 웹팩이 <code class=\"language-text\">lodash</code>를 찾는 방법을 변경시킬 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  resolve<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// config options</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"resolving-for-build-performance\"><a href=\"#resolving-for-build-performance\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resolving for build performance</h2>\n<p>다음 스텝은 resolve 속도를 올려준다.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">resolve.modules</code>, <code class=\"language-text\">resolve.extensions</code>, <code class=\"language-text\">resolve.mainFiles</code>, <code class=\"language-text\">resolve.descriptionFiles</code>의 값의 개수를 최소화하자. 얘네들은 filesystem call 수를 증가시킨다.</p>\n</li>\n<li>\n<p>만약 symlink를 사용하지 않는다면 <code class=\"language-text\">resolve.symlinnks: false</code>를 사용하자.</p>\n</li>\n</ul>\n<h3 id=\"code-classlanguage-textresolvemodulescode\"><a href=\"#code-classlanguage-textresolvemodulescode\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">resolve.modules</code></h3>\n<ul>\n<li>\n<p>웹팩에게 module을 resolve할 때, 어떤 디렉토리를 찾아야 하는지 알려준다.</p>\n</li>\n<li>\n<p>절대 경로와 상대 경로 둘 다 사용되는데, 두 경로가 약간 다르게 행동한다. </p>\n</li>\n<li>\n<p>상대경로는 Node가 <code class=\"language-text\">node_modules</code>를 스캔하는 방식과 비슷하다. 현재 디렉토리의 node<em>module을 뒤지고 없으면 그 위의 node</em>module.. 루트까지 올라간다.</p>\n</li>\n<li>\n<p>절대 경로는 주어진 절대경로만 검색한다.</p>\n</li>\n</ul>\n<p>보통은 다음과 같이 세팅한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">resolve<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  modules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'node_modules'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>특정 디렉토리를 추가하게 될 경우 node_modules의 앞에 오게하자</strong></p>\n<h3 id=\"code-classlanguage-textresolveextensionscode\"><a href=\"#code-classlanguage-textresolveextensionscode\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">resolve.extensions</code></h3>\n<ul>\n<li>자동으로 특정 확장자만 resolve한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//...</span>\n  resolve<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    modules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'node_modules'</span><span class=\"token punctuation\">]</span>\n    extensions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'.js'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.jsx'</span><span class=\"token punctuation\">]</span><span class=\"token comment\">// , .scss ,.css]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>scss나 css가 추가되어 같이 빌드하려면 추가해주면 된다.</li>\n</ul>\n<hr>\n<p>요기까지 해서 js 개발시 최소로 필요한 세팅을 완료하였다. 다음은 포스팅은 react 개발 가능하도록 세팅을 하고 마무리하도록 하겠다.</p>","frontmatter":{"title":"9. 나만의 webpack 만들기 - prodiuction","date":"February 10, 2019"}}},"pageContext":{"slug":"/webpack/9-resolve/","previous":{"fields":{"slug":"/webpack/8-performance/"},"frontmatter":{"title":"8. 나만의 webpack 만들기 - prodiuction","category":"webpack"}},"next":{"fields":{"slug":"/development/third/"},"frontmatter":{"title":"Third Post","category":"development"}}}}