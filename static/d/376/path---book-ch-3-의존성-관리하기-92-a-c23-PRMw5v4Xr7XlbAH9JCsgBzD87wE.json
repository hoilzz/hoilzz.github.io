{"data":{"site":{"siteMetadata":{"title":"hoilzz","author":"hoilzz","siteUrl":"https://hoilzz.github.io","comment":{"disqusShortName":"","utterances":"hoilzz/hoilzz-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"69eef04b-293d-50f6-97d0-323f8a021729","excerpt":"객체간 서로 협업하려면 서로에 대해 지식이 있어야함.  이 지식은 의존성을 만듬 3.1 의존성 이해하기 3.1.1 의존성 있다는 거 알기 객체는 다음과 같은 내용을 알고 있을 때 의존성을 가짐 다른 클래스의 이름 Gear 는 Wheel 이라는 이름의 클래스가 있다는 걸 알고 있음 자기 자신을 제외한 다른 객체에게 전송할 메시지의 이름 Gear 는 Wheel 의 인스턴스가 diameter 라는 메서드를 이해할 수 있다는 것을 알고 있음 메시지가 필요로 하는 인자들 Gear 는 Wheel.new…","html":"<p>객체간 서로 협업하려면 서로에 대해 지식이 있어야함. <strong>이 지식은 의존성을 만듬</strong></p>\n<h2 id=\"31-의존성-이해하기\"><a href=\"#31-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1 의존성 이해하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Gear</span> <span class=\"token punctuation\">{</span>\n  readonly cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly rim<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly tire<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> rim<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> tire<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cog <span class=\"token operator\">=</span> cog<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chainRing <span class=\"token operator\">=</span> chainRing<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rim <span class=\"token operator\">=</span> rim<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tire <span class=\"token operator\">=</span> tire<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">ratio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chainRing <span class=\"token operator\">/</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cog<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 새로 추가된 함수</span>\n  <span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 타이어는 바퀴테를 가싸고 있어서, 지름 계산시 타이어 높이에 2를 곱함</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ratio <span class=\"token operator\">*</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Wheel</span><span class=\"token punctuation\">(</span>rim<span class=\"token punctuation\">,</span> tire<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Wheel</span> <span class=\"token punctuation\">{</span>\n  rim<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  tire<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>rim<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> tire<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rim <span class=\"token operator\">=</span> rim<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tire <span class=\"token operator\">=</span> tire<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rim <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tire <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"311-의존성-있다는-거-알기\"><a href=\"#311-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%9E%88%EB%8B%A4%EB%8A%94-%EA%B1%B0-%EC%95%8C%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1.1 의존성 있다는 거 알기</h3>\n<p>객체는 다음과 같은 내용을 알고 있을 때 의존성을 가짐</p>\n<ul>\n<li>\n<p>다른 클래스의 이름</p>\n<ul>\n<li>Gear 는 Wheel 이라는 이름의 클래스가 있다는 걸 알고 있음</li>\n</ul>\n</li>\n<li>\n<p>자기 자신을 제외한 다른 객체에게 전송할 메시지의 이름</p>\n<ul>\n<li>Gear 는 Wheel 의 인스턴스가 diameter 라는 메서드를 이해할 수 있다는 것을 알고 있음</li>\n</ul>\n</li>\n<li>\n<p>메시지가 필요로 하는 인자들</p>\n<ul>\n<li>Gear 는 Wheel.new 를 위해 rim 과 tire 를 인자로 넘겨야 한다는 것을 알고 있음</li>\n</ul>\n</li>\n<li>\n<p>인자들을 전달하는 순서</p>\n<ul>\n<li>Gear 는 Wheel.new 의 첫번째 인자가 rim, 두번쨰 인자가 tire 라는 것을 알고 있음</li>\n</ul>\n</li>\n</ul>\n<p>위에서 나열한 의존성은 Wheel 을 변경시 어쩔 수 없이 Gear 도 수정해야 하는 상황을 만듬\n협업 과정에서 의존성이 생기는 것은 어쩔 수 없지만, 불필요한 의존성은 Gear 클래스의 수정을 강제함</p>\n<h3 id=\"312-객체들-간의-결합\"><a href=\"#312-%EA%B0%9D%EC%B2%B4%EB%93%A4-%EA%B0%84%EC%9D%98-%EA%B2%B0%ED%95%A9\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1.2 객체들 간의 결합</h3>\n<p>이런 의존성은 Gear 를 Wheel 에 결합(couple) 시킴.</p>\n<p>둘 이상의 객체가 강력하게 coupling 되어있을 때</p>\n<ul>\n<li>이들은 한덩어리로 움직이고 재사용하는 것 불가능</li>\n<li>하나 바꾸면 다른 모든 것을 변환</li>\n</ul>\n<h2 id=\"32-약하게-결합된-코드-작성하기\"><a href=\"#32-%EC%95%BD%ED%95%98%EA%B2%8C-%EA%B2%B0%ED%95%A9%EB%90%9C-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2 약하게 결합된 코드 작성하기</h2>\n<h3 id=\"312-의존성-주입하기\"><a href=\"#312-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%A3%BC%EC%9E%85%ED%95%98%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1.2 의존성 주입하기</h3>\n<p>클래스의 이름을 통해 다른 클래스를 참조하는 방식은 코드의 결합도를 높임\n아래 예제는 <strong>gear_inches 메서드는 Wheel 클래스를 명시적으로 참조</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Gear</span> <span class=\"token punctuation\">{</span>\n  readonly cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly rim<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly tire<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> rim<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> tire<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cog <span class=\"token operator\">=</span> cog<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chainRing <span class=\"token operator\">=</span> chainRing<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rim <span class=\"token operator\">=</span> rim<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tire <span class=\"token operator\">=</span> tire<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ratio <span class=\"token operator\">*</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Wheel</span><span class=\"token punctuation\">(</span>rim<span class=\"token punctuation\">,</span> tire<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Wheel 클래스를 직접 참조하면</p>\n<ul>\n<li>gear_inches 메서드는 Wheel 인스턴스의 기어 인치만을 계산하겠다고 명시적 선언</li>\n<li>즉, Gear 는 다른 객체와 협업하기를 거부</li>\n</ul>\n<p>중요한 것은 <code class=\"language-text\">객체의 클래스가 무엇인지</code>가 아닌, <code class=\"language-text\">우리가 전송하는 메시지가 무엇인지</code>가 중요\n<strong>Gear 에게는 diameter 메서드에 반응할 수 있는 객체가 필요</strong></p>\n<ul>\n<li>Gear 는 대상이 되는 객체가 뭔지 알필요 1 도 없음</li>\n<li>Wheel 이 초기화 되기 위해 rim 과 tire 가 필요하다는 것도 알필요 ㄴㄴ</li>\n</ul>\n<p><strong>Gear 는 diameter 를 알고 있는 객체만 있으면됨</strong></p>\n<h4 id=\"의존성-주입\"><a href=\"#%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%A3%BC%EC%9E%85\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의존성 주입</h4>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Gear</span> <span class=\"token punctuation\">{</span>\n  readonly cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly wheel<span class=\"token punctuation\">:</span> Wheel<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> wheel<span class=\"token punctuation\">:</span> Wheel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cog <span class=\"token operator\">=</span> cog<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chainRing <span class=\"token operator\">=</span> chainRing<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wheel <span class=\"token operator\">=</span> wheel<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 새로 추가된 함수</span>\n  <span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 타이어는 바퀴테를 가싸고 있어서, 지름 계산시 타이어 높이에 2를 곱함</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ratio <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wheel<span class=\"token punctuation\">.</span><span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nGear<span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token number\">52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> Wheel<span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위 코드에서</p>\n<ul>\n<li>Gear 는 wheel 객체가 Wheel 클래스의 인스턴스라는 것을 알지도 못하고 관심도 없음</li>\n</ul>\n<p><code class=\"language-text\">의존성 주입</code> 후 장점은</p>\n<ul>\n<li><strong>Wheel 인스턴스를 Gear 클래스 바깥에서 생성하기 때문에 Gear 와 WHeel 사이의 결합이 없어짐</strong></li>\n<li>이제 Gear 는 diameter 를 구현하고 있는 어떤 객체와도 협업 가능</li>\n</ul>\n<h3 id=\"322-의존성-격리시키기\"><a href=\"#322-%EC%9D%98%EC%A1%B4%EC%84%B1-%EA%B2%A9%EB%A6%AC%EC%8B%9C%ED%82%A4%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2.2 의존성 격리시키기</h3>\n<p><em>불필요한 의존성을 모두 제거하면 좋지만 현실적으로 불가능한 경우 있음</em></p>\n<p>의존성 제거 어려운 경우, 의존성을 클래스 안에서 격리시켜야함</p>\n<p>의존성은</p>\n<ul>\n<li>간결하게 정리되고</li>\n<li><strong>명시적으로 드러나고</strong></li>\n<li>격리되어야함</li>\n</ul>\n<h4 id=\"인스턴스-생성을-격리시키기\"><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%EC%9D%84-%EA%B2%A9%EB%A6%AC%EC%8B%9C%ED%82%A4%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인스턴스 생성을 격리시키기</h4>\n<p>Gear 에 Wheel 을 주입할 수 없다면\n새로운 Wheel 인스턴스를 만드는 과정을 Gear 클래스 내부에 격리시켜야 함</p>\n<p>이는</p>\n<ul>\n<li>의존성을 명시적 노출</li>\n<li>Wheel 이 Gear 클래스 내부에 스며들지 않도록 하기 위함</li>\n</ul>\n<p>다음 두 개의 예시를 보자.</p>\n<ol>\n<li>\n<p>새로운 Wheel 인스턴스 생성하는 과정을 Gear 의 gear_inches 메서드에서 initialize 메서드로 이동</p>\n<ul>\n<li>initialize 메서드를 통해 hweel 에 대한 의존성 명시적 표현</li>\n<li>대신, Gear 가 새 인스턴스 만들 때마다 무조건 Wheel 인스턴스 생성</li>\n</ul>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Gear</span> <span class=\"token punctuation\">{</span>\n  readonly cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly wheel<span class=\"token punctuation\">:</span> Wheel<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> wheel<span class=\"token punctuation\">:</span> Wheel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cog <span class=\"token operator\">=</span> cog<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chainRing <span class=\"token operator\">=</span> chainRing<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wheel <span class=\"token operator\">=</span> wheel<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 새로 추가된 함수</span>\n  <span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 타이어는 바퀴테를 가싸고 있어서, 지름 계산시 타이어 높이에 2를 곱함</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ratio <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wheel<span class=\"token punctuation\">.</span><span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이를 보완한 거는</p>\n<ol start=\"2\">\n<li>\n<p>명시적으로 정의된 wheel 메서드를 통해 Wheel 인스턴스 생성하기</p>\n<ul>\n<li>|| 를 이용하여 객체가 필요한 순간에, WHeel 인스턴스 생성</li>\n</ul>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Gear</span> <span class=\"token punctuation\">{</span>\n  readonly cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly wheel<span class=\"token punctuation\">:</span> Wheel<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> wheel<span class=\"token punctuation\">:</span> Wheel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cog <span class=\"token operator\">=</span> cog<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chainRing <span class=\"token operator\">=</span> chainRing<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wheel <span class=\"token operator\">=</span> wheel<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 새로 추가된 함수</span>\n  <span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 타이어는 바퀴테를 가싸고 있어서, 지름 계산시 타이어 높이에 2를 곱함</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ratio <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wheel<span class=\"token punctuation\">.</span><span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">wheel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wheel <span class=\"token operator\">||</span> Wheel<span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rim<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tire<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 두 예시에서도 Gear 는 너무 많은 것을 알고 있음</p>\n<ul>\n<li>\n<p>여전히 rim 과 tire 를 초기화 인자로 넘겨야 하고</p>\n</li>\n<li>\n<p>Gear 를 위해 Wheel 인스턴스 생성해야 함</p>\n<ul>\n<li>Wheel 이 아닌 다른 객체로는 gear_inches 메서드 이용 불가</li>\n</ul>\n</li>\n<li>\n<p>그래도 나아진 점은</p>\n<ul>\n<li>gear_inches 가 갖고 있던 의존성을 줄이고</li>\n<li>Gear 가 Wheel 에 의존하고 있다는 사실 또렷하게 드러낼 수 있음</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"외부로-전송하는-메시지-중-위험한-것-격리시키기\"><a href=\"#%EC%99%B8%EB%B6%80%EB%A1%9C-%EC%A0%84%EC%86%A1%ED%95%98%EB%8A%94-%EB%A9%94%EC%8B%9C%EC%A7%80-%EC%A4%91-%EC%9C%84%ED%97%98%ED%95%9C-%EA%B2%83-%EA%B2%A9%EB%A6%AC%EC%8B%9C%ED%82%A4%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>외부로 전송하는 메시지 중 위험한 것 격리시키기</h4>\n<p>외부 클래스 이름 참조하는 지점을 격리시켰으니 <code class=\"language-text\">외부로 전송되는 메시지</code>를 보자.</p>\n<blockquote>\n<p>외부로 전송되는 메시지: 나 자신이 아닌 객체에게 보내는 메시지</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 무시무시한 수학 공식 몇 줄</span>\n    foo <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ratio <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wheel<span class=\"token punctuation\">.</span><span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 무시무시한 수학 공식 몇 줄</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>wheel.diameter 가 복잡한 메서드에 파묻힐 경우</p>\n<ul>\n<li>이런 외부에 대한 의존성을 gear_inches 메서드 속에 심어 놓는 것을 불필요</li>\n<li>gear_inches 를 취약하게 만듬</li>\n</ul>\n<p>외부에 대한 의존성을 걷어내고, 의존성을 클래스 내부의 메서드 속에 캡슐화 시켜서\ngear_inches 메서드를 수정할 일을 줄이자.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 무시무시한 수학 공식 몇 줄</span>\n    foo <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ratio <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 무시무시한 수학 공식 몇 줄</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 클래스 내부에 메서드 속에 캡슐화</span>\n<span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> wheel<span class=\"token punctuation\">.</span><span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>gear_inches 에서 외부에 대한 의존성 걷어내기</li>\n<li>\n<p>Wheel 이 diameter 메서드의 이름과 시그너처 바꿔도</p>\n<ul>\n<li><strong>Gear 에 미치는 영향은 이 작은 래퍼 메서드에 한정</strong></li>\n</ul>\n</li>\n</ul>\n<p><em>정리하자면</em></p>\n<p>클래스가 내부에서 변하기 쉬운 메시지를 참조하고 있을 때 이 기술 유용하게 사용</p>\n<ul>\n<li>참조하는 지점을 격리시키는 것은 이런 변화의 영향에 안전하게 대응 가능</li>\n</ul>\n<h3 id=\"323-인자-순서에-대한-의존성-제거\"><a href=\"#323-%EC%9D%B8%EC%9E%90-%EC%88%9C%EC%84%9C%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%A0%9C%EA%B1%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2.3 인자 순서에 대한 의존성 제거</h3>\n<p>인자를 해시로 바꾸기. javascript 로 하면 object 로 전송하기</p>\n<p>이점</p>\n<ul>\n<li>\n<p>순서에 대한 의존성 제거</p>\n<ul>\n<li>순서가 고정도니 인자는 코드 덜 작성하지만, 위험도 증가</li>\n<li>대신 키의 이름에 의존하게됨</li>\n</ul>\n</li>\n<li>새로운 초기화 인자 및 기본값 설정 넘나 쉬움</li>\n<li>다른 코드에 아무런 영향 ㄴㄴ</li>\n</ul>\n<h4 id=\"멀티파라미터-초기화-고립시키기\"><a href=\"#%EB%A9%80%ED%8B%B0%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0-%EC%B4%88%EA%B8%B0%ED%99%94-%EA%B3%A0%EB%A6%BD%EC%8B%9C%ED%82%A4%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>멀티파라미터 초기화 고립시키기</h4>\n<p>우리가 메서드 수정할 수 없는 경우도 있음. <em>프레임워크를 사용할 경우</em></p>\n<p>상황을 우리가 통제할 수 없지만,\n<strong>wrapper 메서드를 통해 프레임워크 메서드를 감싸서 코드를 DRY 하게 만들기 가능</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// Gear가 외부 프레임워크의 한 부분일 때</span>\n<span class=\"token comment\">// Gear/index.js</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Gear</span> <span class=\"token punctuation\">{</span>\n  readonly cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly wheel<span class=\"token punctuation\">:</span> Wheel<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> wheel<span class=\"token punctuation\">:</span> Wheel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cog <span class=\"token operator\">=</span> cog<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chainRing <span class=\"token operator\">=</span> chainRing<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wheel <span class=\"token operator\">=</span> wheel<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// GearWrapper.js</span>\n<span class=\"token comment\">// 외부 인터페이스를 감싸는 모듈을 만들어 변화를 받아들이자.</span>\n<span class=\"token keyword\">import</span> Gear <span class=\"token keyword\">from</span> <span class=\"token string\">'Gear'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token function\">gear</span> <span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Gear<span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">.</span>cog<span class=\"token punctuation\">,</span> arg<span class=\"token punctuation\">.</span>chainRing<span class=\"token punctuation\">,</span> arg<span class=\"token punctuation\">.</span>wheel<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// myCode.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> GearWrapper <span class=\"token keyword\">from</span> <span class=\"token string\">'./GearWrapper'</span><span class=\"token punctuation\">;</span>\n\nGearWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">gear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    chainring<span class=\"token punctuation\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span>\n    cog<span class=\"token punctuation\">:</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>\n    wheel<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Wheel</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 코드에서 GearWrapper 의 두 가지를 기억하자</p>\n<ol>\n<li>\n<p>래퍼 모듈</p>\n<ul>\n<li>GearWrapper 인스턴스 안만들어도 gear 메세지를 전송하는 명시적이고 독립적인 객체</li>\n</ul>\n</li>\n<li>\n<p>오로지 다른 클래스의 인스턴스를 생성하기 위해 존재</p>\n<ul>\n<li>보통 Factory 패턴이라고 부름(Factory 는 객체를 만들기 위해 존재)</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"33-의존성의-방향-관리하기\"><a href=\"#33-%EC%9D%98%EC%A1%B4%EC%84%B1%EC%9D%98-%EB%B0%A9%ED%96%A5-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3 의존성의 방향 관리하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Gear</span> <span class=\"token punctuation\">{</span>\n  readonly cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  readonly chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>cog<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> chainRing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cog <span class=\"token operator\">=</span> cog<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chainRing <span class=\"token operator\">=</span> chainRing<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">ratio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>chainRing <span class=\"token operator\">/</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cog<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span>diameter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ratio <span class=\"token operator\">*</span> diameter<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Wheel</span> <span class=\"token punctuation\">{</span>\n  rim<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  tire<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  gear<span class=\"token punctuation\">:</span> Gear<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>rim<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> tire<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> gear<span class=\"token punctuation\">:</span> Gear<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rim <span class=\"token operator\">=</span> rim<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tire <span class=\"token operator\">=</span> tire<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gear <span class=\"token operator\">=</span> gear<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">diameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rim <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tire <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gear<span class=\"token punctuation\">.</span><span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span>diameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nWheel<span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">gear_inches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위에서는 Wheel 이 Gear 나 ratio 에 의존.</p>\n<ul>\n<li>사실 바뀐거 없음</li>\n<li>하지만 선택한 의존성의 방향은 이후 애플리케이션의 발전 과정에 영향을 미침</li>\n</ul>\n<h3 id=\"322-의존성의-방향-결정하기\"><a href=\"#322-%EC%9D%98%EC%A1%B4%EC%84%B1%EC%9D%98-%EB%B0%A9%ED%96%A5-%EA%B2%B0%EC%A0%95%ED%95%98%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2.2 의존성의 방향 결정하기</h3>\n<p>클래스가 사람이라고 생각해보자. <strong>자기 자신보다 덜 변하는 사람에게 의존해야 함</strong></p>\n<p>위 간단한 문장은 단순한 진실 세 가지를 기반으로 다듬을 수 있음</p>\n<ol>\n<li>어떤 클래스는 다른 클래스에 비해 요구사항이 더 자주 바뀜</li>\n<li>구체 클래스는 추상 클래스보다 수정 횟수가 빈번</li>\n<li>의존성이 높은 클래스를 변경하는 것은 코드의 여러 곳에 영향을 미침</li>\n</ol>\n<h4 id=\"1-변경될-가능성이-얼마나-높은지-이해하기\"><a href=\"#1-%EB%B3%80%EA%B2%BD%EB%90%A0-%EA%B0%80%EB%8A%A5%EC%84%B1%EC%9D%B4-%EC%96%BC%EB%A7%88%EB%82%98-%EB%86%92%EC%9D%80%EC%A7%80-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 변경될 가능성이 얼마나 높은지 이해하기</h4>\n<p>다른 클래스와 비교하여 얼마나 변경되지 않는지를 기준으로 순위 매기기</p>\n<h4 id=\"2-구체적인-것과-추상적인-것을-인지하기\"><a href=\"#2-%EA%B5%AC%EC%B2%B4%EC%A0%81%EC%9D%B8-%EA%B2%83%EA%B3%BC-%EC%B6%94%EC%83%81%EC%A0%81%EC%9D%B8-%EA%B2%83%EC%9D%84-%EC%9D%B8%EC%A7%80%ED%95%98%EA%B8%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 구체적인 것과 추상적인 것을 인지하기</h4>\n<p><strong>추상적</strong> 은 <code class=\"language-text\">구체적인 것으로부터 분리된</code> 것.</p>\n<p>예륻 들어 알아보자.</p>\n<ol>\n<li>\n<p>Gear 가 Wheel, Wheel.new, Wheel.new(rim, tire)에 의존적일 때</p>\n<ul>\n<li>Gear 는 <code class=\"language-text\">구체적인 코드</code>에 의존적</li>\n</ul>\n</li>\n<li>\n<p>Wheel 을 Gear 에 주입하는 (의존성 주입) 방식으로 수정하면서</p>\n<ul>\n<li>Gear 는 <code class=\"language-text\">추상적인 것</code>에 의존</li>\n<li>Gear 는 <code class=\"language-text\">diameter 메시지에 반응하는 어떤 객체를 필요로 한다</code>라는 <code class=\"language-text\">추상적인 사실</code>에 의존</li>\n</ul>\n</li>\n</ol>\n<p>2 번에서 <code class=\"language-text\">interface</code>를 정의했다고 볼 수 있음</p>\n<p>추상화의 훌륭한 점은</p>\n<ul>\n<li>일반적이고 안정적 성질 지님</li>\n<li>추상화된 인터페이스는 인터페이스가 기반하고 있던 구체 클래스보다 변경 적음</li>\n<li>interface 도 의존성이 있기 때문에 디자인할 때 중요</li>\n</ul>\n<h2 id=\"34-요약\"><a href=\"#34-%EC%9A%94%EC%95%BD\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.4 요약</h2>\n<p>의존성 주입은</p>\n<ul>\n<li>느슨하게 결합된 객체</li>\n<li>창의적으로 재사용 할 수 있는 객체 만들어줌</li>\n</ul>\n<p>의존성 격리는</p>\n<ul>\n<li>객체가 예상치 못한 변화에 빨리 적응할 수 있도록 해줌</li>\n</ul>\n<p>이 때, <code class=\"language-text\">추상화</code>를 사용하는 것은</p>\n<ul>\n<li>위와 같은 변경에 직면해야 하는 경우를 줄여줌</li>\n</ul>\n<p>평온한 유지보수는 자기 자신보다 덜 변하는 것에 의존하는 클래스들로 덮여있음.</p>\n<hr>\n<p>의존성 있다는 거 알기\n어떤 객체가 다음 내용을 알고 있을 때 의존성 발생</p>\n<ul>\n<li>다른 클래스의 이름</li>\n<li>다른 객체에게 전송할 메시지의 이름</li>\n<li>메시지가 필요로 하는 인자들</li>\n<li>인자들 전달 순서</li>\n</ul>\n<p>결합(coupling) 약하게 하기</p>\n<ul>\n<li><strong>의존성 주입하기</strong></li>\n<li>\n<p>주입할 수 없다면 <strong>의존성 격리시키기</strong></p>\n<ul>\n<li>격리가 걍 숨기는게 아닌</li>\n<li>의존성 명시적 노출</li>\n<li>격리될 객체가 내부에 스며들지 않게 하기 위해</li>\n<li><strong>인스턴스 생성을 격리시키기</strong></li>\n<li>외부로 전송하는 메시지 중 위험한 것 격리시키기 (<strong>메서드래퍼로 격리시키기</strong>)</li>\n</ul>\n</li>\n</ul>\n<p>인자 순서에 대한 의존성 제거</p>\n<ul>\n<li>해시 이용하기</li>\n<li>\n<p>메서드를 직접 수정 불가능한 경우(프레임워크 이용 등)</p>\n<ul>\n<li>wrapper 메서드를 통해 프레임워크 메서드 감싸기</li>\n</ul>\n</li>\n</ul>\n<p>의존성 방향 결정하기\n기준은</p>\n<ul>\n<li>클래스의 요구사항 바뀌는 횟수</li>\n<li>\n<p>구체적인 것과 추상적인 것 인지하기(추상적인 것에 의존하기)</p>\n<ul>\n<li>구체 클래스는 추상 클래스보다 수정횟수가 빈번</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[루비로 배우는 객체지향 디자인] 3. 의존성 관리하기","date":"November 21, 2017"}}},"pageContext":{"slug":"/book/ch3-의존성-관리하기/","previous":{"fields":{"slug":"/book/ch2-단일-책임-원칙을-따르는-클래스-디자인/"},"frontmatter":{"title":"[루비로 배우는 객체지향 디자인] 2. 단일 책임 원칙","category":"book"}},"next":{"fields":{"slug":"/book/ch4-1-유연한-인터페이스-만들기/"},"frontmatter":{"title":"[루비로 배우는 객체지향 디자인] 4. 유연한 인터페이스 만들기","category":"book"}}}}