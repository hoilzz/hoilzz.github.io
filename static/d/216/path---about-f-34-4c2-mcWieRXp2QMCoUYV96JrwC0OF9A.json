{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"321d354b-4a58-55c7-8bc3-2c3e7ec7238d","excerpt":"Your name hoilzz \n hoilzz \n hoilzz","html":"<h1 id=\"your-name\"><a href=\"#your-name\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Your name</h1>\n<div align=\"center\">\n<p><em>hoilzz</em>\n<em>hoilzz</em>\n<em>hoilzz</em></p>\n</div>","frontmatter":{"title":"about","date":"January 27, 2019","lang":"en"}}},{"node":{"id":"b4974b99-a9dc-5d39-8c6b-da3058dd9642","excerpt":"redux is smarter than you think redux는 생각보다 똑똑하다. 이 사실을 알고나면 너에게 도움이 될거다. redux는 connect() 는 redux에서 가장 중요하다. state를 가지고 props…","html":"<h1 id=\"redux-is-smarter-than-you-think\"><a href=\"#redux-is-smarter-than-you-think\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>redux is smarter than you think</h1>\n<p>redux는 생각보다 똑똑하다. 이 사실을 알고나면 너에게 도움이 될거다. redux는</p>\n<h2 id=\"connect\"><a href=\"#connect\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>connect()</h2>\n<p><code class=\"language-text\">connect</code>는 redux에서 가장 중요하다.</p>\n<p>state를 가지고 props의 형태로 컴포넌트 계층으로 내려보낸다. 그곳에서 부터 presentational components는 자신들이 할일을 하고 렌더링을 진행한다. 나는 <code class=\"language-text\">connect</code>에 집중할거고 그 이유는 최적화가 위치한 곳이기 때문이다.</p>\n<h2 id=\"efficiently-connecting-components\"><a href=\"#efficiently-connecting-components\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>efficiently connecting() components</h2>\n<p><code class=\"language-text\">connect</code> 인자들은 주목할 가치가 있다. ??\n귿즉, state tree가 업데이트될 때, wrapped(presentational) component는 미리 렌더링하지 않을까?라는 걱정을 하지 않아도 된다. app의 생명주기를 통해</p>\n<p><strong>shouldComponentUpdate</strong></p>\n<p>prop을 바인딩할 때 조심해야할 것.</p>\n<ul>\n<li>\n<p>inline function은 불필요한 render call</p>\n<ul>\n<li>hooks의 useCallback을 이용하여 메모이제이션하자.\nInstead of doing stuff like &#x3C;MyComponent items={[‘one’, ‘two’]} />, which will lead to new props each time and make shouldComponentUpdate evaluate to true (thus triggering a render()), you’re instructed to do something like:</li>\n</ul>\n</li>\n</ul>\n<p>이걸 다 읽고 나서 component에 prop을 전달할 때 신경써야되는게 뭘까? 라고 생각할거다. <code class=\"language-text\">connect</code>를 다시보자.</p>","frontmatter":{"title":"","date":null,"lang":null}}}]}},"pageContext":{}}