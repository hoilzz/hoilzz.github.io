{"data":{"site":{"siteMetadata":{"title":"hoilzz","author":"hoilzz","siteUrl":"","comment":{"disqusShortName":"","utterances":"hoilzz/hoilzz.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"ca23fdbe-7d56-535d-8e49-a7be96bd6d6f","excerpt":"코드를 보려면  이동 와  의 빌드 목표는 아예 다르다. strong source map localhost server with live reloading or Hot module replacement minified bundles lighter weight source maps load 시간을 개선하기 위한 optimized assets webpack 공홈에서는  분리된 웹팩 설정  작성하기를 권장한다. 분리하긴 할건데 DRY…","html":"<blockquote>\n<p>코드를 보려면 <a href=\"https://github.com/hoilzz/create-react-packzz/tree/5-production\">이동</a></p>\n</blockquote>\n<p><code class=\"language-text\">development</code>와 <code class=\"language-text\">production</code>의 빌드 목표는 아예 다르다.</p>\n<p><code class=\"language-text\">development</code></p>\n<ul>\n<li>strong source map</li>\n<li>localhost server with live reloading or Hot module replacement</li>\n</ul>\n<p><code class=\"language-text\">production</code></p>\n<ul>\n<li>minified bundles</li>\n<li>lighter weight source maps</li>\n<li>load 시간을 개선하기 위한 optimized assets</li>\n</ul>\n<p>webpack 공홈에서는 <strong>분리된 웹팩 설정</strong> 작성하기를 권장한다.</p>\n<p>분리하긴 할건데 DRY하게 유지하기 위해 공통 설정을 따로 만들거다. 그래서 각 환경에 맞게 merge 할거다. 이것은 <a href=\"https://github.com/survivejs/webpack-merge\"><code class=\"language-text\">webpack-merge</code></a>를 이용할거다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i -D webpack-merge</code></pre></div>\n<p>webpack 폴더를 만들어서 webpack.common.js, webpack.dev.js, webpack.prod.js 파일 3개 만들자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// webpack/webpack.common.js</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> CleanWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clean-webpack-plugin'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> HtmlWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html-webpack-plugin'</span><span class=\"token punctuation\">)</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    app<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'[name].[hash].js'</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CleanWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'dist'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Production'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  module<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n        exclude<span class=\"token punctuation\">:</span> <span class=\"token regex\">/node_modules/</span><span class=\"token punctuation\">,</span>\n        include<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        use<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n          options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            cacheDirectory<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// webpack/webpack.dev.js</span>\n<span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  mode<span class=\"token punctuation\">:</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>HotModuleReplacementPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  devServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    contentBase<span class=\"token punctuation\">:</span> <span class=\"token string\">'./dist'</span><span class=\"token punctuation\">,</span>\n    hot<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  devtool<span class=\"token punctuation\">:</span> <span class=\"token string\">'cheap-module-eval-source-map'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// webpack/webpack.prod.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  mode<span class=\"token punctuation\">:</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">,</span>\n  devtool<span class=\"token punctuation\">:</span> <span class=\"token string\">'source-map'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 새로 추가된 source map 설정인데 아래에서 다시 설명.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>common.js</p>\n<ul>\n<li>entry, output, babel-loader는 dev와 prod 둘 다 필요하기 때문에 포함</li>\n<li>플러그인은 HMR은 dev에서만 필요하므로 얘를 제외하고 모두 공통 사용</li>\n</ul>\n</li>\n<li>\n<p>dev.js</p>\n<ul>\n<li>HMR, devServer, devtool</li>\n</ul>\n</li>\n<li>\n<p>prod.js</p>\n<ul>\n<li>mode: production</li>\n</ul>\n</li>\n</ul>\n<p>요 3가지를 최상단의 webpack.config.js에서 webpack-merge로 합쳐서 config 설정.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// package.json</span>\n<span class=\"token string\">\"scripts\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"webpack --env=prod\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"webpack-dev-server --env=dev\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// webpack.config.js</span>\n<span class=\"token keyword\">const</span> commonConfig <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./webpack/webpack.common.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> webpackMerge <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webpack-merge\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> argv <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yargs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> envConfig <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`./webpack/webpack.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>argv<span class=\"token punctuation\">.</span>env<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.js`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">webpackMerge</span><span class=\"token punctuation\">(</span>commonConfig<span class=\"token punctuation\">,</span> envConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>scripts 명령어에서 <code class=\"language-text\">--</code>를 통해 argument를 전달할 수 있다.\n이 argument를 편하게 object로 사용하기 위해 <a href=\"https://github.com/yargs/yargs\">yargs</a>를 사용할거다.</p>\n<p>그리고 webpack.config.js에서\nargv.env에 따라 다른 webpack설정을 불러와서 최종 config를 생성할 것이다.</p>\n<h2 id=\"specify-the-mode\"><a href=\"#specify-the-mode\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Specify the Mode</h2>\n<p>많은 라이브러리가 라이브러리 내부에 포함되어야만 하는 것을 결정하기 위해 <code class=\"language-text\">process.env.NODE_ENV</code> 변수를 이용한다. 예를 들어, <code class=\"language-text\">production</code> 모드가 아닌 경우에 몇몇 라이브러리는 debuggin을 더 쉽게 하기 위해 testing과 logging을 추가할 것이다.</p>\n<p><code class=\"language-text\">process.env.NODE_ENV === &#39;production&#39;</code> 은 실제 유저를 위해 실행되는 방식을 최적화 하기 위해 중요한 코드를 추가하거나 drop할 것이다. webpack v4부터는 <code class=\"language-text\">mode</code>가 자동으로 <code class=\"language-text\">DefinePlugin</code>(NODE_ENV 같은 환경 변수 설정)을 설정할 것이다.</p>\n<p>여튼 mode: production 하면 자동으로 NODE_ENV가 production 설정되서 최적화된다는 뜻임.</p>\n<h2 id=\"source-mapping\"><a href=\"#source-mapping\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Source Mapping</h2>\n<p>production에서 디버깅, bench mark test(?)에 유용한 source map을 권장한다. <code class=\"language-text\">devtool: source-map</code> 을 권장한다. 빌드 속도가 꽤 빠르면서 production 모드에서 쓰기 적합하다.</p>\n<blockquote>\n<p><code class=\"language-text\">inline-***</code> 과 <code class=\"language-text\">eval-***</code>은 production에서 쓰지말자. 번들 사이즈가 늘어나고 전체 퍼포먼스가 저하된다.</p>\n</blockquote>","frontmatter":{"title":"5.  - production","date":"February 06, 2019"}}},"pageContext":{"slug":"/webpack/5-production/","previous":{"fields":{"slug":"/webpack/4-development-environment/"},"frontmatter":{"title":"4.  - 개발 환경 구축하기","category":"webpack"}},"next":{"fields":{"slug":"/webpack/6-code-split/"},"frontmatter":{"title":"6.  - code split","category":"webpack"}}}}