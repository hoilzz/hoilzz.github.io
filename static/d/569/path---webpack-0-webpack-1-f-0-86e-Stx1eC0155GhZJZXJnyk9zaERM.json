{"data":{"site":{"siteMetadata":{"title":"hoilzz","author":"hoilzz","siteUrl":"","comment":{"disqusShortName":"","utterances":"hoilzz/hoilzz.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"b2d4331b-6151-57e7-a04d-7f5138c6f994","excerpt":"웹팩에 대해 간단히 알아보기 위해  concepts 를 요약 번역해보겠습니다. webpack  은 모던 자바스크립트 앱을 위한  정적 모듈 번들러  다. 웹팩이 앱을 처리할 때, 내부적으로 프로젝트에 필요한 모든 모듈을 mapping하는  의존성 그래프 를 만들고 1게 이상의 번들을 생성한다. Dependency Graph\n한 파일이 다른 파일에 의존할 때마다, webpack은 이것을  dependency 로 생각한다. 이렇게 하면, 웹팩은 non-code 자원(image, web fonts…","html":"<p>웹팩에 대해 간단히 알아보기 위해 <a href=\"https://webpack.js.org/concepts/\">concepts</a>를 요약 번역해보겠습니다.</p>\n<p><strong>webpack</strong> 은 모던 자바스크립트 앱을 위한 <strong>정적 모듈 번들러</strong> 다. 웹팩이 앱을 처리할 때, 내부적으로 프로젝트에 필요한 모든 모듈을 mapping하는 <a href=\"https://webpack.js.org/concepts/dependency-graph/\">의존성 그래프</a>를 만들고 1게 이상의 번들을 생성한다.</p>\n<blockquote>\n<p>Dependency Graph\n한 파일이 다른 파일에 의존할 때마다, webpack은 이것을 <em>dependency</em>로 생각한다. 이렇게 하면, 웹팩은 non-code 자원(image, web fonts와 같은 것)을 가지고 application의 <em>dependency</em> 로 제공할 수 있다.\nentry point(시작점)에서 시작하여, 웹팩은 재귀적으로 앱에 필요한 모든 모듈을 포함하는 의존성 그래프를 빌드한다.\n그리고 나서 모든 모듈</p>\n</blockquote>","frontmatter":{"title":"0. webpack","date":"February 13, 2019"}}},"pageContext":{"slug":"/webpack/0-webpack/","previous":{"fields":{"slug":"/javascript/concurrency-model-and-event-loop/"},"frontmatter":{"title":"concurrency model and event loop","category":"javascript"}},"next":{"fields":{"slug":"/development/third/"},"frontmatter":{"title":"Third Post","category":"development"}}}}